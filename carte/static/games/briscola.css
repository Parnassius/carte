#game-area[data-game="briscola"] {
  &[data-playing] .card[data-position="hand"][data-player="self"]::after {
    display: block;
  }

  div {
    --unit: min(
      calc(
        100vw /
        (
          var(--card-height-raw) +
          var(--card-width-raw) *
          3 +
          var(--gap-raw) *
          5 +
          var(--deck-shadow-max-width-raw)
        )
      ),
      calc(
        100vh /
        (var(--card-height-raw) * 3.5 + var(--gap-raw) * 2 + var(--gap-big-raw) * 2)
      )
    );

    @media (orientation: portrait) {
      --center-x: calc(
        50vw +
        (
          var(--gap) +
          var(--card-height) +
          var(--deck-shadow-max-width) -
          var(--card-width)
        ) /
        2
      );
    }

    --card-starting-y: var(--center-y);
    --card-starting-x: var(--left);

    &.card {
      &[data-position="deck"] {
        top: calc(var(--center-y) - var(--deck-shadow-width) / 2);
        left: var(--left);
      }

      &[data-position="briscola"] {
        top: var(--center-y);
        left: calc(var(--left) + var(--card-width) / 2);
        z-index: -1;
      }

      &[data-position="playing-area"] {
        top: calc(
          var(--center-y) +
          var(--card-playing-area-offsets-sign) *
          var(--card-height) /
          4
        );
        left: calc(
          var(--center-x) +
          var(--card-playing-area-offsets-sign) *
          var(--card-width) /
          4
        );
        &[data-player="opponent"] {
          --card-playing-area-offsets-sign: -1;
        }
        &[data-player="self"] {
          --card-playing-area-offsets-sign: 1;
        }
      }

      &[data-position="hand"] {
        left: calc(
          var(--center-x) +
          var(--card-hand-position) *
          (var(--gap) + var(--card-width))
        );
        &[data-player="opponent"] {
          top: var(--top);
        }
        &[data-player="self"] {
          top: var(--bottom);
        }
      }

      &[data-position="points"] {
        left: calc(var(--left) + var(--rotation-diff));
        &[data-player="opponent"] {
          top: calc(var(--top) - var(--rotation-diff));
        }
        &[data-player="self"] {
          top: calc(var(--bottom) - var(--deck-shadow-width) + var(--rotation-diff));
        }
      }
    }

    &.name-tag {
      left: var(--gap);
      &[data-player="opponent"] {
        top: calc(var(--gap) * 2 + var(--card-width) + var(--deck-shadow-width));
      }
      &[data-player="self"] {
        bottom: calc(var(--gap) * 2 + var(--card-width) + var(--deck-shadow-width));
      }
    }
  }
}
